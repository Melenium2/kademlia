// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	kademlia "github.com/Melenium2/kademlia"
	"github.com/Melenium2/kademlia/internal/table/node"
	mock "github.com/stretchr/testify/mock"

	net "net"
)

// Finder is an autogenerated mock type for the finder type
type Finder struct {
	mock.Mock
}

// Find provides a mock function with given fields: id, ip
func (_m *Finder) Find(id kademlia.ID, ip net.IP) ([]*node.Node, error) {
	ret := _m.Called(id, ip)

	var r0 []*node.Node
	if rf, ok := ret.Get(0).(func(kademlia.ID, net.IP) []*node.Node); ok {
		r0 = rf(id, ip)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*node.Node)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(kademlia.ID, net.IP) error); ok {
		r1 = rf(id, ip)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
